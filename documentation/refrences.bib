
@article{avin_demand-aware_nodate,
	title = {Demand-{Aware} {Network} {Design} with {Minimal} {Congestion} and {Route} {Lengths}},
	abstract = {Emerging communication technologies allow to reconﬁgure the physical network topology at runtime, enabling demand-aware networks (DANs): networks whose topology is optimized toward the workload they serve. However, today, only little is known about the fundamental algorithmic problems underlying the design of such demand-aware networks. This paper presents the ﬁrst bounded-degree, demand-aware network, cl-DAN, which minimizes both congestion and route lengths. The designed network is provably (asymptotically) optimal in each dimension individually: we show that there do not exist any bounded-degree networks providing shorter routes (independently of the load), nor do there exist networks providing lower loads (independently of the route lengths). The main building block of the designed cl-DAN networks are ego-trees: communication sources arrange their communication partners in an optimal tree, individually. While the union of these ego-trees forms the basic structure of cl-DANs, further techniques are presented to ensure bounded degrees (for scalability).},
	language = {en},
	author = {Avin, Chen and Mondal, Kaushik and Schmid, Stefan},
	pages = {9},
	file = {Avin és mtsai. - Demand-Aware Network Design with Minimal Congestio.pdf:C\:\\Users\\Imre5\\Zotero\\storage\\T8PSENT3\\Avin és mtsai. - Demand-Aware Network Design with Minimal Congestio.pdf:application/pdf}
}

@inproceedings{ghobadi_projector:_2016,
	address = {Florianopolis, Brazil},
	title = {{ProjecToR}: {Agile} {Reconfigurable} {Data} {Center} {Interconnect}},
	isbn = {978-1-4503-4193-6},
	shorttitle = {{ProjecToR}},
	url = {http://dl.acm.org/citation.cfm?doid=2934872.2934911},
	doi = {10.1145/2934872.2934911},
	abstract = {We explore a novel, free-space optics based approach for building data center interconnects. It uses a digital micromirror device (DMD) and mirror assembly combination as a transmitter and a photodetector on top of the rack as a receiver (Figure 1). Our approach enables all pairs of racks to establish direct links, and we can reconﬁgure such links (i.e., connect different rack pairs) within 12 µs. To carry trafﬁc from a source to a destination rack, transmitters and receivers in our interconnect can be dynamically linked in millions of ways. We develop topology construction and routing methods to exploit this ﬂexibility, including a ﬂow scheduling algorithm that is a constant factor approximation to the ofﬂine optimal solution. Experiments with a small prototype point to the feasibility of our approach. Simulations using realistic data center workloads show that, compared to the conventional folded-Clos interconnect, our approach can improve mean ﬂow completion time by 30–95\% and reduce cost by 25–40\%.},
	language = {en},
	urldate = {2019-05-18},
	booktitle = {Proceedings of the 2016 conference on {ACM} {SIGCOMM} 2016 {Conference} - {SIGCOMM} '16},
	publisher = {ACM Press},
	author = {Ghobadi, Monia and Kilper, Daniel and Mahajan, Ratul and Phanishayee, Amar and Devanur, Nikhil and Kulkarni, Janardhan and Ranade, Gireeja and Blanche, Pierre-Alexandre and Rastegarfar, Houman and Glick, Madeleine},
	year = {2016},
	pages = {216--229},
	file = {Ghobadi és mtsai. - 2016 - ProjecToR Agile Reconfigurable Data Center Interc.pdf:C\:\\Users\\Imre5\\Zotero\\storage\\8X6LKG68\\Ghobadi és mtsai. - 2016 - ProjecToR Agile Reconfigurable Data Center Interc.pdf:application/pdf}
}

@misc{noauthor_python_nodate,
	title = {Python - {Python}.org},
	url = {https://www.python.org/},
	abstract = {The official home of the Python Programming Language},
	language = {en},
	urldate = {2019-05-19},
	journal = {Python.org},
	file = {Snapshot:C\:\\Users\\Imre5\\Zotero\\storage\\UCIZ6QIG\\www.python.org.html:text/html}
}

@misc{noauthor_networkx_nodate,
	title = {{NetworkX} - http://networkx.github.io/},
	url = {http://networkx.github.io/},
	urldate = {2019-05-19},
	file = {NetworkX — NetworkX:C\:\\Users\\Imre5\\Zotero\\storage\\RMWJTFEG\\networkx.github.io.html:text/html}
}